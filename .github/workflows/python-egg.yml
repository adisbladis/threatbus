name: "Python Egg"
on:
  push:
  release:
    types: published
env:
  DEBIAN_FRONTEND: noninteractive
jobs:
  egg-install:
    name: Egg Installation
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        python-version: [3.7, 3.8]
        os: [ubuntu-20.04, macOS-latest]
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.ref }}
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up Dist Environment
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel setuptools
    - name: Install Application and Plugins
      run: |
        make clean build
    - name: Package Application and Plugins
      run: |
        make clean dist

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    container: fixel/zeek:broker-latest
      # The image is based on Debian-10 and has `zeek/broker` pre-installed
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.ref }}
    - name: Set up Dist Environment
      run: |
        apt-get -qq update
        apt-get -qqy install python3-pip 
        update-alternatives --install /usr/bin/python python /usr/bin/python3 1
        python -m pip install --upgrade pip
        python -m pip install wheel setuptools
    - name: Install Application and Plugins
      run: |
        make dev-mode
    - name: Run Unit Tests
      run: |
        make unit-tests

  docker-release:
    name: Publish to DockerHub
    if: github.ref == 'refs/heads/master' || github.event.action == 'published'
    runs-on: ubuntu-20.04
    needs: egg-install
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.ref }}
    - name: Publish Docker Image 
      uses: elgohr/Publish-Docker-Github-Action@2.12
      with:
        name: tenzir/threatbus
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

  egg-release:
    name: Egg Release
    if: github.event.action == 'published'
    needs: egg-install
    runs-on: ubuntu-20.04
    env:
      TWINE_USERNAME: __token__
      TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.ref }}
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Set up Dist Environment
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel setuptools twine
    - name: Package Application and Plugins
      run: |
        make clean dist
    - name: Create Release
      id: create_release
      run: |
        NAME="Threat Bus $(date +%Y-%m-%d)"
        ASSET="$NAME.tar.gz"
        tar czf "$ASSET" dist apps/vast/dist apps/zeek
        echo "::set-output name=name::$NAME"
        echo "::set-output name=asset::$ASSET"
    - name: Publish to GitHub
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ steps.create_release.outputs.asset}}
        asset_name: ${{ steps.create_release.outputs.name}}
        asset_content_type: application/gzip
    - name: Publish to PyPI
      run: |
        python -m twine upload --verbose --non-interactive dist/*
        python -m twine upload --verbose --non-interactive apps/vast/dist/*
